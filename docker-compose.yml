version: '3.9'

# extension field: https://docs.docker.com/compose/compose-file/compose-file-v3/#extension-fields
x-networks: &networks
  networks:
    - ac-network

x-ac-shared-conf: &ac-shared-conf
  <<: *networks
  working_dir: /azerothcore
  depends_on:
    ac-database:
      condition: service_healthy

services:
  ac-database:
    <<: *networks
    image: mysql:8.0
    restart: unless-stopped
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    ports:
      - ${DOCKER_DB_EXTERNAL_PORT:-63306}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${DOCKER_DB_ROOT_PASSWORD:-password}
    volumes:
      - type: volume
        source: ac-database
        target: /var/lib/mysql
    healthcheck:
        test: "/usr/bin/mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --execute \"SHOW DATABASES;\""
        interval: 2s
        timeout: 40s
        retries: 20

  ac-worldserver:
    <<: *ac-shared-conf
    stdin_open: true
    tty: true
    image: acore/ac-wotlk-worldserver:${DOCKER_IMAGE_TAG:-master} # name of the generated image after built locally
    restart: unless-stopped
    privileged: true
    user: ${DOCKER_USER:-acore}
    ports:
      - ${DOCKER_WORLD_EXTERNAL_PORT:-8085}:8085
      - ${DOCKER_SOAP_EXTERNAL_PORT:-7878}:7878
    volumes:
      - ./scripts/lua:/azerothcore/env/dist/bin/lua_scripts/scripts
      - ac-client-data:/azerothcore/env/dist/data:ro
    depends_on:
      ac-database:
        condition: service_healthy
      ac-client-data:
        condition: service_started

  ac-authserver:
    <<: *ac-shared-conf
    tty: true
    image: acore/ac-wotlk-authserver:${DOCKER_IMAGE_TAG:-master} # name of the generated image after built locally
    restart: unless-stopped
    ports:
      - ${DOCKER_AUTH_EXTERNAL_PORT:-3724}:3724

  ac-eluna-ts-dev:
    image: acore/eluna-ts:${DOCKER_IMAGE_TAG:-master} # name of the generated image after built locally
    command: sh -c "cd /eluna-ts/modules && npm install && cd /eluna-ts && npm run build:lib && npm run dev"
    volumes:
      # from typescript
      - ./scripts/typescript:/eluna-ts/modules
      # to lua
      - ./scripts/lua:/eluna-ts/dist/

  ac-client-data:
    <<: *networks
    image: acore/ac-wotlk-client-data:${DOCKER_IMAGE_TAG:-master}
    volumes:
      - ac-client-data:/azerothcore/env/dist/data

  ac-db-import:
    <<: *ac-shared-conf
    image: acore/ac-wotlk-worldserver:${DOCKER_IMAGE_TAG:-master} # name of the generated image after built locally
    command: ./env/dist/bin/dbimport
    environment:
      AC_DISABLE_INTERACTIVE: "1"
    profiles: [db-import]

  ac-dev-server:
    <<: *ac-shared-conf
    tty: true
    image: acore/ac-wotlk-dev-server:${DOCKER_IMAGE_TAG:-master} # name of the generated image after built locally
    ports:
      - ${DOCKER_WORLD_EXTERNAL_PORT:-8085}:8085
      - ${DOCKER_SOAP_EXTERNAL_PORT:-7878}:7878
      - ${DOCKER_AUTH_EXTERNAL_PORT:-3724}:3724
    profiles: [dev]
    volumes:
      - ac-dev-server:/azerothcore

  ac-dev-tools:
    <<: *ac-shared-conf
    image: acore/ac-wotlk-tools:${DOCKER_IMAGE_TAG:-master} # name of the generated image after built locally
    user: root
    working_dir: /azerothcore/env/client/
    volumes:
      - ${DOCKER_CLIENT_DATA_FOLDER:-./var/client}:/azerothcore/env/client/Data
      - ${DOCKER_VOL_TOOLS_DBC:-./var/extractors/dbc}:/azerothcore/env/client/dbc
      - ${DOCKER_VOL_TOOLS_MAPS:-./var/extractors/maps}:/azerothcore/env/client/maps
      - ${DOCKER_VOL_TOOLS_VMAPS:-./var/extractors/vmaps}:/azerothcore/env/client/vmaps
      - ${DOCKER_VOL_TOOLS_MMAPS:-./var/extractors/mmaps}:/azerothcore/env/client/mmaps
    profiles: [dev]

  phpmyadmin:
    <<: *networks
    image: phpmyadmin
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
    profiles: [dev]

volumes:
  ac-database:
  ac-dev-server:
  ac-client-data:

networks:
  ac-network:
